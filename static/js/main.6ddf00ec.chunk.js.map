{"version":3,"sources":["components/common/PageNotFound.tsx","components/routes/Home/Home.tsx","components/App/App.tsx","reportWebVitals.js","index.tsx"],"names":["PageNotFound","intl","useIntl","className","id","defaultMessage","style","fontSize","fontFamily","formatMessage","to","icon","onClick","toast","Home","useState","loading","setLoading","useEffect","warning","success","App","library","add","fab","fas","far","locale","messages","en_messages","basename","process","exact","path","component","autoClose","position","progressClassName","bodyClassName","closeButton","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"obAqEeA,EA7DgB,WAC7B,IAAMC,EAAOC,cAuBb,OACE,sBAAKC,UAAU,oBAAf,UAEE,cAAC,IAAD,CACEC,GAAG,uBACHC,eAAe,sBAGjB,sBAAMC,MAAO,CAAEC,SAAU,OAAQC,WAAY,SAAWL,UAAU,OAAlE,SACGF,EAAKQ,cAAc,CAClBL,GAAI,uBACJC,eAAgB,wBAIpB,sBAAMC,MAhCS,CACjBC,SAAU,OACVC,WAAY,SA8BeL,UAAU,OAAnC,SACGF,EAAKQ,cAAc,CAClBL,GAAI,uBACJC,eAAgB,wBAIpB,qBAAKF,UAAU,YAAf,SACE,eAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,eAAvB,qBACU,cAAC,IAAD,CAAkBC,GAAG,qBAIjC,cAAC,IAAD,CAAiBO,KAAM,CAAC,MAAO,YAC/B,cAAC,IAAD,CAAiBA,KAAK,WAEtB,wBAAQR,UAAU,kBAAkBS,QAzCzB,WACbC,YAAM,oBAwCJ,yB,QC1BSC,G,MA/BQ,WACrB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACJF,EACFH,IAAMM,QAAN,gCAAuCH,IAEvCH,IAAMO,QAAQ,+BAQlB,OACE,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SACE,6BACE,cAAC,IAAD,CAAkBC,GAAG,mBAGzB,8BACE,wBAAQD,UAAU,eAAeS,QAZjB,WACpBK,GAAYD,IAWR,mC,gDCgBOK,EA7BO,WAGpB,OAFAC,IAAQC,IAAIC,IAAKC,IAAKC,KAGpB,cAAC,IAAD,CAAcC,OAAO,KAAKC,SAAUC,EAApC,SACE,cAAC,IAAD,CAAYC,SAAUC,aAAtB,SACE,sBAAK5B,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjC,cAAC,IAAD,CAAOoB,UAAWlC,SAItB,cAAC,IAAD,CACEmC,UAAW,IACXC,SAAS,eACTC,kBAAkB,gBAClBC,cAAc,YACdC,aAAa,EACbC,kBAAkB,EAClB7B,MAAM,YCzBH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ddf00ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound: React.FC = () => {\r\n  const intl = useIntl();\r\n\r\n  // How to scss styling directly in component file\r\n  // ---> Best approach just use a scss file import, common one for all or ---> just use App's one\r\n\r\n  // Make dictionnary of classes\r\n  const spanStyles = {\r\n    fontSize: \"25px\",\r\n    fontFamily: \"Inter\",\r\n  };\r\n\r\n  // Make a notify service like in angular project for easier toast configs, style toast Miami style\r\n\r\n  const notify = () => {\r\n    toast(\"Toastify works!\");\r\n  };\r\n\r\n  // Use const not function for now\r\n\r\n  // function notify2() {\r\n  //   toast(\"Toastify works!\");\r\n  // }\r\n\r\n  return (\r\n    <div className=\"PageNotFound-main\">\r\n\r\n      <FormattedMessage\r\n        id=\"pageNotFound.message\"\r\n        defaultMessage=\"defaulted to this\"\r\n      />\r\n\r\n      <span style={{ fontSize: \"25px\", fontFamily: \"Inter\" }} className=\"mx-5\">\r\n        {intl.formatMessage({\r\n          id: \"pageNotFound.message\",\r\n          defaultMessage: \"defaulted to this\",\r\n        })}\r\n      </span>\r\n\r\n      <span style={spanStyles} className=\"mx-5\">\r\n        {intl.formatMessage({\r\n          id: \"pageNotFound.message\",\r\n          defaultMessage: \"defaulted to this\",\r\n        })}\r\n      </span>\r\n\r\n      <div className=\"mx-5 my-5\">\r\n        <Link to=\"/\" className=\"btn btn-dark\">\r\n          Go back <FormattedMessage id=\"header.home\" />\r\n        </Link>\r\n      </div>\r\n\r\n      <FontAwesomeIcon icon={[\"fas\", \"coffee\"]} />\r\n      <FontAwesomeIcon icon=\"coffee\" />\r\n      \r\n      <button className=\"btn btn-primary\" onClick={notify}>Notify!</button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import \"./Home.scss\";\r\nimport React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home: React.FC = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      toast.warning(`Page loading is still ${loading}`);\r\n    } else {\r\n      toast.success(\"Page loaded successfully\");\r\n    }\r\n  });\r\n\r\n  const toggleLoading = () => {\r\n    setLoading(!loading);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"my-3\">\r\n        <h3>\r\n          <FormattedMessage id=\"home.title\" />\r\n        </h3>\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-dark\" onClick={toggleLoading}>\r\n          Toggle loading\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PageNotFound from \"../common/PageNotFound\";\r\nimport Home from \"../routes/Home/Home\";\r\nimport { RiotService } from \"../../services/riot.service\";\r\n\r\nimport { IntlProvider } from \"react-intl\";\r\nimport en_messages from \"../../locales/en.json\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst App: React.FC = () => {\r\n  library.add(fab, fas, far);\r\n\r\n  return (\r\n    <IntlProvider locale=\"en\" messages={en_messages}>\r\n      <HashRouter basename={process.env.REACT_APP_BASE_URL}>\r\n        <div className=\"App-body\">\r\n          <div className=\"flex-grow-1\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route component={PageNotFound} />\r\n              {/* <Redirect to=\"/\" /> */}\r\n            </Switch>\r\n          </div>\r\n          <ToastContainer\r\n            autoClose={3000}\r\n            position=\"bottom-right\"\r\n            progressClassName=\"toastProgress\"\r\n            bodyClassName=\"toastBody\"\r\n            closeButton={true}\r\n            pauseOnFocusLoss={false}\r\n            icon={false}\r\n          />\r\n        </div>\r\n      </HashRouter>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}