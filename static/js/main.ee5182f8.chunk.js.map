{"version":3,"sources":["components/common/PageNotFound.tsx","components/routes/Home/Home.tsx","components/App/App.tsx","reportWebVitals.js","index.tsx"],"names":["PageNotFound","intl","useIntl","id","style","fontSize","fontFamily","className","formatMessage","defaultMessage","icon","onClick","toast","Card","width","Header","ListGroup","variant","Item","Home","useState","justifyContent","textAlign","marginTop","App","library","add","fab","fas","far","locale","messages","en_messages","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ocA4DeA,EArDgB,WAC7B,IAAMC,EAAOC,cAqBb,OACE,gCACE,cAAC,IAAD,CAAkBC,GAAG,yBACrB,sBACEC,MAAO,CAAEC,SAAU,OAAQC,WAAY,SACvCC,UAAU,4BAFZ,SAIGN,EAAKO,cAAc,CAAEL,GAAI,uBAAwBM,eAAgB,WAEpE,sBACEL,MAzBa,CACjBC,SAAU,OACVC,WAAY,SAwBRC,UAAU,OAFZ,SAIGN,EAAKO,cAAc,CAAEL,GAAI,uBAAwBM,eAAgB,UAEpE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,YAC/B,cAAC,IAAD,CAAiBA,KAAK,WACtB,wBAAQC,QAzBG,WACbC,YAAM,iBAwBJ,qBAEA,eAACC,EAAA,EAAD,CAAMT,MAAO,CAAEU,MAAO,SAAtB,UACE,cAACD,EAAA,EAAKE,OAAN,uBACA,eAACC,EAAA,EAAD,CAAWC,QAAQ,QAAnB,UACE,cAACD,EAAA,EAAUE,KAAX,8BACA,cAACF,EAAA,EAAUE,KAAX,sCACA,cAACF,EAAA,EAAUE,KAAX,2C,QC9BKC,G,MAlBQ,WAEnB,MAA8BC,oBAAS,GAAvC,6BAIA,OACI,sBAAKhB,MAAO,CAACiB,eAAgB,UAA7B,UACI,oBAAIjB,MAAO,CAACkB,UAAW,SAAUD,eAAgB,UAAjD,SACI,cAAC,IAAD,CAAkBlB,GAAG,iBAEzB,oBAAIC,MAAO,CAACkB,UAAW,SAAUD,eAAgB,SAAUE,UAAW,SAAtE,qC,gDCoBGC,EApBO,WAGpB,OAFAC,IAAQC,IAAIC,IAAKC,IAAKC,KAGpB,cAAC,IAAD,CAAcC,OAAO,KAAKC,SAAUC,EAApC,SACE,cAAC,IAAD,CAAYC,SAAUC,aAAtB,SACE,sBAAK3B,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjC,cAAC,IAAD,CAAOkB,UAAWrC,SAGtB,cAAC,IAAD,YCjBKsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee5182f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst PageNotFound: React.FC = () => {\r\n  const intl = useIntl();\r\n\r\n  // How to scss styling directly in component file\r\n  // ---> Best approach just use a scss file import, common one for all or ---> just use App's one\r\n\r\n  // Make dictionnary of classes\r\n  const spanStyles = {\r\n    fontSize: \"25px\",\r\n    fontFamily: \"Inter\"\r\n  };\r\n\r\n  // Make a notify service like in angular project for easier toast configs, style toast Miami style\r\n\r\n  const notify = () => {\r\n    toast(\"Wow so easy!\");\r\n  };\r\n\r\n  function notify2() {\r\n    toast(\"Wow so easy!\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormattedMessage id=\"pageNotFound.message\" />\r\n      <span\r\n        style={{ fontSize: \"25px\", fontFamily: \"Inter\" }}\r\n        className=\"PageNotFound-message mx-5\"\r\n      >\r\n        {intl.formatMessage({ id: \"pageNotFound.message\", defaultMessage: \"BRUH\" })}\r\n      </span>\r\n      <span\r\n        style={spanStyles}\r\n        className=\"mx-5\"\r\n      >\r\n        {intl.formatMessage({ id: \"pageNotFound.message\", defaultMessage: \"OKE\" })}\r\n      </span>\r\n      <FontAwesomeIcon icon={['fas', 'coffee']} />\r\n      <FontAwesomeIcon icon=\"coffee\" />\r\n      <button onClick={notify}>Notify!</button>\r\n\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <Card.Header>Featured</Card.Header>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n          <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n          <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import './Home.scss';\r\nimport React from 'react';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Make use effect example that toasts\r\n\r\n    return (\r\n        <div style={{justifyContent: 'center'}}>\r\n            <h3 style={{textAlign: 'center', justifyContent: 'center'}}>\r\n                <FormattedMessage id=\"home.title\" />\r\n            </h3>\r\n            <h3 style={{textAlign: 'center', justifyContent: 'center', marginTop: '100px'}}>\r\n                DONT DROP THE SOAP\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PageNotFound from \"../common/PageNotFound\";\r\nimport Home from \"../routes/Home/Home\";\r\nimport { RiotService } from \"../../services/riot.service\";\r\n\r\nimport { IntlProvider } from \"react-intl\";\r\nimport en_messages from \"../../locales/en.json\"\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst App: React.FC = () => {\r\n  library.add(fab, fas, far);\r\n\r\n  return (\r\n    <IntlProvider locale=\"en\" messages={en_messages}>\r\n      <HashRouter basename={process.env.REACT_APP_BASE_URL}>\r\n        <div className=\"App-body\">\r\n          <div className=\"flex-grow-1\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </div>\r\n          <ToastContainer />\r\n        </div>\r\n      </HashRouter>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}